# ============================================
# LEAN BOT - Configuración de Producción
# ============================================
# IMPORTANTE: Renombra este archivo a .env en tu servidor
# y completa con los valores reales

# ============================================
# 1. BASE DE DATOS
# ============================================
# Para producción, se recomienda usar PostgreSQL o MySQL
# SQLite es solo para desarrollo local

# Opción 1: SQLite (desarrollo/pruebas)
DATABASE_URL=sqlite:///./leanbot.db

# Opción 2: PostgreSQL (RECOMENDADO para producción)
# DATABASE_URL=postgresql://usuario:password@host:5432/leanbot_db

# Opción 3: MySQL
# DATABASE_URL=mysql://usuario:password@host:3306/leanbot_db

# ============================================
# 2. GOOGLE GEMINI API KEY
# ============================================
# El sistema tiene fallback automático entre múltiples claves
# Si una falla por límite de tasa, usa la siguiente automáticamente

# Clave principal (la que está funcionando actualmente)
GEMINI_API_KEY=AIzaSyB-cs_l3cAYwh1WfMHA_pQHibltBPSaGrk

# Nota: Las claves están en api_key_manager.py con fallback automático
# - Clave 1: AIzaSyCrzdwv-viQnqcFnc7PBAimEzyDMf4dXY0 (límite alcanzado)
# - Clave 2: AIzaSyB-cs_l3cAYwh1WfMHA_pQHibltBPSaGrk (ACTIVA)

# ============================================
# 3. CONFIGURACIÓN DEL SERVIDOR
# ============================================
# Puerto en el que corre el servidor (Render usa el que asigna)
PORT=12000

# Host (0.0.0.0 para aceptar conexiones externas)
HOST=0.0.0.0

# Entorno (development, production, testing)
ENVIRONMENT=production

# ============================================
# 4. CORS - Orígenes Permitidos
# ============================================
# Dominios que pueden acceder a tu API
# Separados por comas si son múltiples

# Para desarrollo (localhost)
# ALLOWED_ORIGINS=http://localhost:3000,http://localhost:12000

# Para producción (tu dominio de Render)
ALLOWED_ORIGINS=https://hackaton-d1h6.onrender.com,https://tu-frontend.onrender.com

# Para permitir todos (NO RECOMENDADO en producción)
# ALLOWED_ORIGINS=*

# ============================================
# 5. SEGURIDAD
# ============================================
# Secret key para sesiones y tokens (genera una única)
SECRET_KEY=tu-secret-key-super-segura-cambiala-por-una-real

# JWT Secret (si usas autenticación JWT)
# JWT_SECRET=tu-jwt-secret-key

# Tiempo de expiración de tokens (en segundos)
# TOKEN_EXPIRATION=3600

# ============================================
# 6. MODELO DE IA - CONFIGURACIÓN
# ============================================
# Modelo de Gemini a usar
GEMINI_MODEL=gemini-2.0-flash

# Proveedor de IA por defecto
DEFAULT_AI_PROVIDER=gemini

# ============================================
# 7. ANÁLISIS DE SENTIMIENTOS - BETO
# ============================================
# Modelo de análisis de sentimientos
SENTIMENT_MODEL=finiteautomata/beto-sentiment-analysis

# Dispositivo (cpu o cuda)
SENTIMENT_DEVICE=cpu

# ============================================
# 8. LOGGING Y MONITOREO
# ============================================
# Nivel de logging (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Archivo de logs (opcional)
# LOG_FILE=./logs/leanbot.log

# ============================================
# 9. LÍMITES Y PERFORMANCE
# ============================================
# Límite de rate limiting (requests por minuto por IP)
RATE_LIMIT=60

# Timeout para requests a APIs externas (segundos)
API_TIMEOUT=30

# Máximo de workers (para Uvicorn)
MAX_WORKERS=4

# ============================================
# 10. FEATURES FLAGS
# ============================================
# Habilitar/deshabilitar funcionalidades

# Habilitar análisis de sentimientos
ENABLE_SENTIMENT_ANALYSIS=true

# Habilitar analytics
ENABLE_ANALYTICS=true

# Habilitar reconocimiento de voz
ENABLE_VOICE_RECOGNITION=true

# Modo debug (solo en desarrollo)
DEBUG=false

# ============================================
# 11. INTEGRATIONS (OPCIONAL)
# ============================================
# API Key de Mistral (si decides usarlo)
# MISTRAL_API_KEY=tu_mistral_api_key

# Otras integraciones
# SENDGRID_API_KEY=tu_sendgrid_key
# TWILIO_ACCOUNT_SID=tu_twilio_sid
# TWILIO_AUTH_TOKEN=tu_twilio_token

# ============================================
# 12. RENDER.COM ESPECÍFICO
# ============================================
# Render detecta automáticamente estas variables
# No necesitas configurarlas manualmente si usas Render

# RENDER=true
# RENDER_EXTERNAL_URL=https://tu-app.onrender.com
# RENDER_SERVICE_NAME=lean-bot

# ============================================
# NOTAS IMPORTANTES
# ============================================
# 1. NUNCA subas este archivo .env a GitHub
# 2. El .gitignore ya está configurado para ignorarlo
# 3. En Render, configura estas variables en el Dashboard
# 4. Para local, crea un .env con estos valores
# 5. Para producción, usa variables de entorno del servidor

# ============================================
# COMANDOS ÚTILES
# ============================================
# Iniciar servidor local:
#   python main.py
#
# Con variables de entorno específicas:
#   PORT=8000 python main.py
#
# Verificar configuración:
#   python -c "import os; print(os.getenv('GEMINI_API_KEY'))"
